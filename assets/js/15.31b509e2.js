(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{427:function(v,_,t){v.exports=t.p+"assets/img/image-20210226143555245.8839c2a6.png"},509:function(v,_,t){v.exports=t.p+"assets/img/image-20210226150415139.4c8e8f62.png"},575:function(v,_,t){"use strict";t.r(_);var s=t(6),a=Object(s.a)({},(function(){var v=this,_=v.$createElement,s=v._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h2",{attrs:{id:"中间人攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中间人攻击"}},[v._v("#")]),v._v(" 中间人攻击")]),v._v(" "),s("p",[v._v("当用户发送 HTTP 请求时，传输的内容会经过用户电脑、WiFi 路由器、运营商和目标服务器，在响应 HTTP 请求也会经历这些环节，而在这每个环节中，由于 HTTP 明文传输的特性，"),s("strong",[v._v("数据都有可能被中间人所窃取、伪造或篡改")]),v._v("，这种攻击方式就是中间人攻击。")]),v._v(" "),s("p",[v._v("由于 HTTP 明文传输的特性使得传输过程毫无安全性可言，而为了防范这种攻击方式，就需要一种加密方案，即 "),s("strong",[v._v("HTTPS")]),v._v("。")]),v._v(" "),s("p",[v._v("HTTPS 并不是一个新的协议，其原理是在 HTTP 与 TCP 之间新加入一个安全层（SSL/TLS）。也就是在传输数据阶段，HTTP 数据会先经过安全层，然后安全层再将数据传输到 TCP 层。")]),v._v(" "),s("p",[v._v("HTTPS 所有的安全核心都在安全层，它负责"),s("strong",[v._v("对发起 HTTP 请求的数据进行加密操作")]),v._v("和"),s("strong",[v._v("对接收到的 HTTP 响应内容进行解密操作")]),v._v("。")]),v._v(" "),s("h2",{attrs:{id:"加密方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加密方式"}},[v._v("#")]),v._v(" 加密方式")]),v._v(" "),s("p",[v._v("对数据的加密与解密方式有三种：对称加密、非对称加密以及混合加密")]),v._v(" "),s("h3",{attrs:{id:"对称加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对称加密"}},[v._v("#")]),v._v(" 对称加密")]),v._v(" "),s("p",[v._v("对称加密指的是"),s("strong",[v._v("加密和解密使用的密钥都是同一个")]),v._v("，是对称的。发送端在传输数据前使用对称密钥对明文加密后再传输，接收端接收到数据时使用对称密钥进行解密就能拿到明文数据。若黑客对数据进行窃取，窃取到的数据也是加密后的数据。")]),v._v(" "),s("p",[v._v("但是对称密钥的协商是一个问题，在协商的过程中对称密钥有可能会被黑客所获取，后续传输的密文也能够被黑客解密。")]),v._v(" "),s("h3",{attrs:{id:"非对称加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密"}},[v._v("#")]),v._v(" 非对称加密")]),v._v(" "),s("p",[v._v("非对称加密也叫公钥加密算法。这种加密方式使用了两种密钥："),s("strong",[v._v("公钥")]),v._v("和"),s("strong",[v._v("私钥")]),v._v("。公钥是公开的，而私钥是严格保存的")]),v._v(" "),s("p",[v._v("非对称加密能够解决密钥协商的问题。网站保管好私钥，在网上任意分发公钥，在传输数据阶段时，发送端利用公钥加密，接收端使用私钥对密文进行解密便能够得到明文。若黑客同时窃取了公钥和密文，由于没有私钥，也就无法解密。")]),v._v(" "),s("p",[v._v("但是由于非对称加密算法十分复杂，非对称加密的算法时间性能比较差。如果在传输阶段使用非对称加密，那么性能便会有很大的问题。")]),v._v(" "),s("h3",{attrs:{id:"混合加密"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#混合加密"}},[v._v("#")]),v._v(" 混合加密")]),v._v(" "),s("p",[v._v("混合加密能够很好地解决对称加密和非对称加密产生的问题，指的是同时使用上面两种加密方式。")]),v._v(" "),s("p",[v._v("混合加密的实现方式主要过程如下：")]),v._v(" "),s("ul",[s("li",[v._v("针对密钥协商阶段，使用"),s("strong",[v._v("非对称加密的方式来协商出后续传输阶段所需的密钥")]),v._v("。即发送端利用公钥加密会话密钥后发送给接收端，接收端利用私钥解密得到会话密钥，这样一来双方都拥有了会话密钥。")]),v._v(" "),s("li",[v._v("针对数据传输阶段，"),s("strong",[v._v("使用对称加密的方式来加密明文")]),v._v("。即对明文直接使用会话密钥加密后传输。")])]),v._v(" "),s("p",[v._v("HTTPS 采用的也是这种加密方式。")]),v._v(" "),s("h2",{attrs:{id:"数字证书与ca"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字证书与ca"}},[v._v("#")]),v._v(" 数字证书与CA")]),v._v(" "),s("p",[v._v("通过对称加密和非对称加密的混合方式，能够完美地实现数据的加密传输，即实现机密性。不过由 CIA 我们得知还有完整性没有实现，比如黑客通过 DNS 劫持将服务端的 IP 地址替换成黑客的 IP 地址，这样一来我们访问到的其实是黑客的服务器，黑客就可以自己实现公钥和私钥，从而让浏览器认为是安全的。")]),v._v(" "),s("p",[v._v("那么我们如何实现完整性呢？即如何证明我们访问到的服务器就是我们要访问的服务器呢？")]),v._v(" "),s("p",[v._v("这就需要使用到数字证书，可以把数字证书想象成房产证，能够证明用户的身份。而对于数字证书的颁发机构就是 "),s("strong",[v._v("CA，即数字证书认证机构")]),v._v("，可以把 CA 机构想象成房地产商，为用户颁发能够证明用户身份的证书。")]),v._v(" "),s("p",[s("strong",[v._v("数字证书")]),v._v("中主要含有下面这些东西：")]),v._v(" "),s("ul",[s("li",[s("strong",[v._v("服务器的公钥")])]),v._v(" "),s("li",[v._v("证书的基础信息，包括证书序列号、颁发者、有效时间、签名算法等")]),v._v(" "),s("li",[v._v("CA 机构的数字签名（用于验证证书的真伪）")])]),v._v(" "),s("h2",{attrs:{id:"tls-的握手过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tls-的握手过程"}},[v._v("#")]),v._v(" TLS 的握手过程")]),v._v(" "),s("p",[v._v("TLS 也有握手过程来确定服务器的真伪以及确认双方使用的会话密钥，具体的握手流程如下（加密套件指的是加密的算法）：")]),v._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:t(427),alt:"image-20210226143555245"}}),v._v(" "),s("p",[v._v("可以看出实现完整性的最重要的流程就是验证数字证书，而实现机密性是利用公钥来协商出会话密钥。")]),v._v(" "),s("h2",{attrs:{id:"如何验证数字证书"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何验证数字证书"}},[v._v("#")]),v._v(" 如何验证数字证书")]),v._v(" "),s("p",[v._v("首先我们需要了解数字证书是如何生成的：")]),v._v(" "),s("ol",[s("li",[v._v("服务器用户将"),s("strong",[v._v("公钥以及自己的资料信息")]),v._v("交给 CA 机构")]),v._v(" "),s("li",[v._v("CA 机构通过各种渠道验证服务器的真实性")]),v._v(" "),s("li",[v._v("CA 机构将基础信息和服务器公钥一起进行 Hash 生成"),s("strong",[v._v("信息摘要")]),v._v("，再利用 "),s("strong",[v._v("CA 机构的私钥")]),v._v("对信息摘要进行加密生成"),s("strong",[v._v("数字签名")]),v._v("。")]),v._v(" "),s("li",[v._v("将数字签名、基础信息和服务器公钥一起放进数字证书中")])]),v._v(" "),s("p",[v._v("那么如何验证数字证书的真伪：")]),v._v(" "),s("ol",[s("li",[v._v("浏览器利用"),s("strong",[v._v("CA 机构的公钥")]),v._v("对数字签名进行解密得到信息摘要")]),v._v(" "),s("li",[v._v("浏览器再将基础信息和服务器公钥一起进行 Hash（签名算法在数字证书中） 后又生成一份信息摘要")]),v._v(" "),s("li",[v._v("这两份信息摘要进行比对是否是同一份便可知道数字证书的真伪")])]),v._v(" "),s("p",[v._v("这时候又产生一个新的问题，CA 机构的公钥从哪来？"),s("strong",[v._v("CA 机构的公钥在 CA 机构的数字证书中")]),v._v("，那 CA 机构的数字证书从哪来？CA 机构的证书一般是通过下载得到或内置在操作系统中（根证书就在操作系统中），这样一来又得验证 CA 机构数字证书的真伪。")]),v._v(" "),s("p",[v._v("而给 CA 机构颁发数字证书的上级 CA 机构我们也得验证，直到验证到根 CA 机构。")]),v._v(" "),s("p",[v._v("我们可以打开浏览器 URL 地址栏左边的小锁就可以看到数字证书的信息以及 CA 机构的数字证书。以力扣官网为例，其数字证书的 CA 机构有两家，最上级的便是根 CA 机构。")]),v._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:t(509),alt:"image-20210226150415139"}})])}),[],!1,null,null,null);_.default=a.exports}}]);