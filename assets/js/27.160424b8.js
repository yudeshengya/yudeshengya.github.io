(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{517:function(t,e,s){t.exports=s.p+"assets/img/1671d387e4189ec8.f327107e.png"},589:function(t,e,s){"use strict";s.r(e);var _=s(6),o=Object(_.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("从一个例子入手")]),t._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br")])]),_("p",[t._v("这时 person 对象的原型就是 Person 构造函数的 prototype，即原型是一个对象。")]),t._v(" "),_("ol",[_("li",[t._v("每个对象实例都包含一个原型对象的指针")]),t._v(" "),_("li",[t._v("每个构造函数都有一个原型对象")]),t._v(" "),_("li",[t._v("每个原型对象都包含一个指向构造函数的指针")]),t._v(" "),_("li",[t._v("Object.prototype 是所有对象的爸爸，所有对象都可以通过 "),_("code",[t._v("__proto__")]),t._v(" 找到它")]),t._v(" "),_("li",[t._v("Function.prototype 是所有函数的爸爸，所有函数都可以通过 "),_("code",[t._v("__proto__")]),t._v(" 找到它")]),t._v(" "),_("li",[t._v("对象实例的 "),_("code",[t._v("__proto__")]),t._v(" 属性指向原型， "),_("code",[t._v("__proto__")]),t._v(" 将对象实例和原型连接起来组成了原型链")]),t._v(" "),_("li",[t._v("原型链就是多个对象通过 "),_("code",[t._v("__proto__")]),t._v(" 的方式连接了起来")])]),t._v(" "),_("p",[_("img",{attrs:{src:s(517),alt:"1671d387e4189ec8"}})])])}),[],!1,null,null,null);e.default=o.exports}}]);